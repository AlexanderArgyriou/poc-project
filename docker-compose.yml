version: "3.7"

services:
  user:
      build:
        context: .
        dockerfile: Dockerfile
      image: user-ms:0.0.2-SNAPSHOT
      container_name: user-ms
      network_mode: "host"
      depends_on:
        mongo:
          condition: service_healthy
      environment:
        - SERVER_PORT=9080
        - SPRING_APPLICATION_NAME=user-ms
        - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=userDB
        - SPRING_DATA_MONGODB_AUTO_INDEX_CREATION=true
        - SPRING_DATA_MONGODB_HOST=localhost
        - SPRING_DATA_MONGODB_PORT=27017
        - SPRING_DATA_MONGODB_USERNAME=user1
        - SPRING_DATA_MONGODB_PASSWORD=user1
        - SPRING_DATA_MONGODB_DATABASE=userDB

  mongo:
    image: mongo:4.4.2
    container_name: mongo
    network_mode: "host"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=userDB
      - MONGO_DB_USERNAME=user1
      - MONGO_DB_PASSWORD=user1
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    command: [ "--bind_ip", "0.0.0.0","--replSet", "rs0"]
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p root --quiet) -eq 1

